// https://www.acmicpc.net/problem/1912

const fs = require("fs");
const input = (
  process.platform === "linux"
    ? fs.readFileSync("/dev/stdin").toString()
    : `10
    10 -4 3 1 5 6 -35 12 21 -1`
)
  .trim()
  .split("\n");
let n = Number(input[0]);
const p = input[1]
  .trim()
  .split(" ")
  .map((v) => +v);

// 수열에서 수를 하나 제거 가능
// - 제거 하지 않아도 됨
// - 배열 복사해서 가장 작은 값 구하고 마이너스일 때만 빼기
//
// 연속되는 숫자의 합
/*
[ 10, -4,  3,  1, 5, 6, -35, 12, 21, -1 ] 일 때

*/
const minNum = Math.min(...p);
if (minNum < 0) {
  const idx = p.indexOf(minNum);
  p.splice(idx, 1);
}

const dp = [p[0]]; // 이전 숫자까지의 합

for (var i = 1; i < n; i++) {
  // 현재 숫자과 이전 숫자까지의 합과 현재 숫자의 합 중에
  // 현재 숫자가 더 크면
  // 10 -4 3 1 5 6 -35 + 12
  // 이전 숫자까지의 합과 현재 숫자의 합이 더 크면
  //
  const 현재숫자 = p[i];
  const 이전숫자까지합 = dp[i - 1];

  if (현재숫자 > 현재숫자 + 이전숫자까지합) {
    dp[i] = 현재숫자;
  } else {
    dp[i] = 현재숫자 + 이전숫자까지합;
  }
}
console.log(Math.max(...dp));

// 현재숫자 = p[i] , 이전숫자까지합 = dp[i - 1];

// 현재숫자 < 현재숫자 + 이전숫자까지합 일때
// 계속 더해가면 된다.

// 현재숫자 > 현재숫자 + 이전숫자까지합 일때
// 12 > -14 + 12
// 이대로 진행 해봤자 손실이다.
// 그럼 이전까지숫자합을 버리고 나부터 다시 시작

// [ 10, -4,  3,  1, 5, 6, -35, 12, 21, -1 ] 일 때
// 처음 인덱스부터 시작
// -4 < 10 + -4 이면 이전 숫자까지의 합 + 현재 숫자가 이전 숫자까지의 합
// -35 < -35 + 21 이면 일단 더한다. 판별은 다음숫자가 해줄 것이다.
// 12 > -14 + 12 인 상황이 나왔다. 그렇다면 굳이 더할 필요가 없다.
// 그냥 12부터 다시 시작하면 된다.
